# Docker image file that describes an Ubuntu18.04 image with PowerShell installed from Microsoft APT Repo
ARG fromTag=22.04
ARG imageRepo=ubuntu

FROM ${imageRepo}:${fromTag} AS installer-env

ARG USER_ID=1000 
ARG GROUP_ID=1000
ARG USER_NAME=user
ARG TZDATA=Europe/Berlin

ENV LC_ALL="en_US.UTF-8" \
    LANG="en_US.UTF-8" \
    USER=${USER_NAME} \
    TZ=${TZDATA}

# Install dependencies and clean up
RUN apt-get update -y \
    && apt-get upgrade -y \
    && apt-get install --no-install-recommends -y \
       python3 \
       python3-distutils \
       gcc \
       openssh-client \
       python3-dev \
       less \
       locales \
       curl \
       jq \
       ca-certificates \
    && echo ${LC_ALL} >>/etc/default/locale \
    && echo ${LANG}  >>/etc/default/locale \
    && ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone \
    && locale-gen ${LANG} && update-locale

# Create user and group
# RUN addgroup --gid ${GROUP_ID} ${USER_NAME}
RUN  if [ -z $(getent group ${GROUP_ID}) ]; then addgroup --gid ${GROUP_ID} ${USER_NAME}; fi
RUN  if [ -z $(getent passwd ${USER_ID}) ]; then adduser --disabled-password --gecos '' --uid ${USER_ID} --gid ${GROUP_ID} ${USER_NAME}; fi


# Prepare install Azure-Cli in user context 
RUN mkdir -p /home/${USER_NAME}/scripts
RUN mkdir -p /home/${USER_NAME}/.azure
RUN mkdir -p /home/${USER_NAME}/Json
RUN mkdir -p /home/${USER_NAME}/Certificates
RUN chown -R ${USER_ID}:${GROUP_ID} /home/${USER_NAME}
RUN chown -R ${USER_ID}:${GROUP_ID} /home/${USER_NAME}/.azure
RUN chown -R ${USER_ID}:${GROUP_ID} /home/${USER_NAME}/Json
RUN chown -R ${USER_ID}:${GROUP_ID} /home/${USER_NAME}/Certificates

COPY .bashrc /home/${USER_NAME}/.bashrc
COPY .bash_aliases /home/${USER_NAME}/.bash_aliases
COPY .bash_aliases /home/${USER_NAME}/.bash_history
COPY install.py /home/${USER_NAME}/scripts/install.py
COPY install.sh /home/${USER_NAME}/scripts/install.sh

# Install Azure-Cli in user context 
RUN chown -R ${USER_ID}:${GROUP_ID} /home/${USER_NAME} \
    && chmod 755 /home/${USER_NAME}/scripts/install.sh \
    && chmod 775 /home/${USER_NAME}/scripts/install.py

USER ${USER_NAME}

RUN /home/${USER_NAME}/scripts/install.sh ${USER_NAME}

# Clean Up
RUN rm /home/${USER_NAME}/scripts/install.sh
RUN rm /home/${USER_NAME}/scripts/install.py

# Set working directory
WORKDIR /home/${USER_NAME}
    
# Use Bash command shell
CMD [ "/bin/bash" ]
