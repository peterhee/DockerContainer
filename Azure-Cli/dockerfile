# Docker image file that describes an Ubuntu18.04 image with PowerShell installed from Microsoft APT Repo
# INTEL use Image Repo ubuntu
# ARM64 use Image Repo arm64v8/ubuntu
ARG IMAGE=ubuntu
ARG TAG=22.04

FROM ${IMAGE}:${TAG} AS installer-env

# Default argument when not provided in the --build-arg
ARG TZDATA=Europe/Berlin
# INTEL use x64 to get the Powershell installation files
# ARM use arm64 to get the Powershell installation files
ARG CPU=x64
ARG TAG=${TAG}

# Timezone
ARG TZDATA=Europe/Berlin

# Default user and group id
ARG USER_ID=1000
ARG GROUP_ID=1000
ARG USER_NAME=user

# Parameters msgraph-cli
# https://learn.microsoft.com/en-us/graph/cli/installation?tabs=linux
# Download: https://github.com/microsoftgraph/msgraph-cli/releases/download/v1.9.0/msgraph-cli-linux-x64-1.9.0.tar.gz
# Donwload: https://github.com/microsoftgraph/msgraph-cli/releases/download/v1.9.0/msgraph-cli-linux-arm64-1.9.0.tar.gz
# Download: https://github.com/microsoftgraph/msgraph-cli/releases/download/v1.9.0/msgraph-cli-linux-arm64-1.9.0.tar.gz
ARG MSGRAPH_VERSION=1.9.0
ARG MSGRAPH_PACKAGE=msgraph-cli-linux-${CPU}-${MSGRAPH_VERSION}.tar.gz
ARG MSGRAPH_PACKAGE_URL=https://github.com/microsoftgraph/msgraph-cli/releases/download/v${MSGRAPH_VERSION}/${MSGRAPH_PACKAGE}
RUN echo ${MSGRAPH_PACKAGE_URL}

# Set environment variables
ENV LC_ALL="en_US.UTF-8" \
    LANG="en_US.UTF-8" \
    USER=${USER_NAME} \
    TZ=${TZDATA}

# Create directories
RUN mkdir -p /opt/microsoft/msgraph
RUN mkdir -p /home/${USER_NAME}/scripts
RUN mkdir -p /home/${USER_NAME}/.azure
RUN mkdir -p /home/${USER_NAME}/Json
RUN mkdir -p /home/${USER_NAME}/Certificates

# Copy files
COPY .bashrc /home/${USER_NAME}/.bashrc
COPY .bash_aliases /home/${USER_NAME}/.bash_aliases
COPY .bash_aliases /home/${USER_NAME}/.bash_history
COPY install.sh /home/${USER_NAME}/scripts/install.sh

# Install dependencies and clean up
RUN apt-get update -y \
    && apt-get upgrade -y

RUN apt-get install --no-install-recommends -y \
       gcc \
       openssh-client \
       less \
       locales

RUN apt-get install --no-install-recommends -y \
       curl \
       jq \
       wget \
       ca-certificates \
       libcap2-bin \
       gnome-keyring \
       libsecret-1-0 \
       gnupg

RUN echo ${LC_ALL} >>/etc/default/locale \
    && echo ${LANG}  >>/etc/default/locale \
    && ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone \
    && locale-gen ${LANG} && update-locale

# MS Graph CLI not supported on x64 Linux    
# Install msgraph-cli only for x64
RUN if [ "$CPU" = "x64" ]; then \
    wget -O /tmp/msgraph.tar.gz ${MSGRAPH_PACKAGE_URL} >>dev/null \
    && tar -zxf /tmp/msgraph.tar.gz -C /opt/microsoft/msgraph \
    && ln -s /opt/microsoft/msgraph/mgc /usr/local/bin/mgc \
    && rm -f /tmp/msgraph.tar.gz; \
    fi

# Install Terraform
RUN wget -O - https://apt.releases.hashicorp.com/gpg | gpg --dearmor -o /usr/share/keyrings/hashicorp-archive-keyring.gpg \
    && echo "deb [signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] https://apt.releases.hashicorp.com ${UBUNTU_CODENAME} main" | tee /etc/apt/sources.list.d/hashicorp.list \
    && apt update -y \
    && apt install terraform -y

# Remove default user and group if exists (Ubuntu 24.04 Default User)
RUN if [ -n "$(getent passwd 1000)" ]; then userdel -r $(id -nu 1000); fi

# Create user and group
# RUN addgroup --gid ${GROUP_ID} ${USER_NAME} if exists rename group
RUN  if [ -z "$(getent group ${GROUP_ID})" ]; then addgroup --gid ${GROUP_ID} ${USER_NAME}; fi
# RUN adduser ${GROUP_ID} ${USER_NAME} if exists rename user and change home directory 
RUN  if [ -z "$(getent passwd ${USER_ID})" ]; then adduser --disabled-password --gecos '' --uid ${USER_ID} --gid ${GROUP_ID} ${USER_NAME}; fi

# Install Azure-Cli in user context 
RUN chown -R ${USER_ID}:${GROUP_ID} /home/${USER_NAME} \
    && chmod 755 /home/${USER_NAME}/scripts/install.sh

# Install Azure-Cli
RUN /home/${USER_NAME}/scripts/install.sh

# Switch to user context
USER ${USER_NAME}

# Clean Up
RUN rm -f /home/${USER_NAME}/scripts/install.sh

# Set working directory
WORKDIR /home/${USER_NAME}
    
# Use Bash command shell
CMD [ "/bin/bash" ]
