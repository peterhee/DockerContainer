# Docker image file that describes an Ubuntu18.04 image with PowerShell installed from Microsoft APT Repo
# INTEL use Image Repo ubuntu
# ARM64 use Image Repo arm64v8/ubuntu
ARG IMAGE=ubuntu
ARG TAG=22.04

FROM ${IMAGE}:${TAG} AS installer-env

# Timezone
ARG TZDATA=Europe/Berlin

# Set environment variables
ENV LC_ALL="en_US.UTF-8" \
    LANG="en_US.UTF-8" \
    TZ=${TZDATA} \
    # Add dotnet tools to path.
    # ENV PATH="${PATH}:/root/.dotnet/tools"
    PATH="${PATH}:/root/.dotnet/tools"

# DOCFX Releases
# https://github.com/dotnet/docfx/releases

# Install required packages
# .NET v8.0 SDK is required for DocFX
RUN apt-get update -y \
    && apt-get upgrade -y \
    && apt-get install unzip wget nginx git libunwind8 dotnet-sdk-8.0 locales -y \
    && echo ${LC_ALL} >>/etc/default/locale \
    && echo ${LANG}  >>/etc/default/locale \
    && ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone \
    && locale-gen ${LANG} && update-locale \
    # Clean up
    && apt-get clean -y \
    && apt-get autoremove -y \
    && rm -rf /var/lib/apt/lists/* \
    && rm -f /var/cache/apt/archives/*.deb  

# Create source directory
RUN mkdir -p /source \
    && mkdir -p /scripts

# Configure the tools and scripts
COPY entrypoint.sh /scripts
RUN chmod 755 /scripts/entrypoint.sh

# NGINX Config
COPY nginx.conf /etc/nginx/nginx.conf

# Install DocFX as a dotnet tool.
RUN dotnet tool update -g docfx \
    && docfx --version

# Set working directory
WORKDIR /source

# Expose port 80
EXPOSE 80

ENTRYPOINT [ "/scripts/entrypoint.sh" ]
# CMD [ "/bin/bash" ] 
