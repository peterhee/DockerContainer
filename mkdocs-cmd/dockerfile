# Docker image file that describes an Ubuntu18.04 image with PowerShell installed from Microsoft APT Repo
# INTEL use Image Repo ubuntu
# ARM64 use Image Repo arm64v8/ubuntu
ARG IMAGE=ubuntu
ARG TAG=24.04

FROM ${IMAGE}:${TAG} AS installer-env
ARG UBUNTU_VERSION=24.04

# Timezone
ARG TZDATA=Europe/Berlin

# Default user and group id
ARG USER_ID=1000 
ARG GROUP_ID=1000
ARG USER_NAME=user

# Define ENVs for Localization/Globalization
ENV DOTNET_SYSTEM_GLOBALIZATION_INVARIANT=false \
    LC_ALL="en_US.UTF-8" \
    LANG="en_US.UTF-8" \
    USER=${USER_NAME} \
    TZ=${TZDATA} \
    GROUP_ID=${GROUP_ID} \
    USER_ID=${USER_ID} \
    UBUNTU_VERSION=${UBUNTU_VERSION}
    # set a fixed location for the Module analysis cache

# Set the timezone
RUN ln -snf /usr/share/zoneinfo/${TZ} /etc/localtime && echo ${TZ} > /etc/timezone

# Create directories 
RUN mkdir /site
RUN mkdir -p /scripts
RUN mkdir -p /home/${USER_NAME}

# Configure the tools and scripts
COPY .bashrc /home/${USER_NAME}/.bashrc
COPY .bash_aliases /home/${USER_NAME}/.bash_aliases
COPY entrypoint.sh /scripts


# Install dependencies and clean up
RUN apt-get update -y \
    && apt-get upgrade -y \
    && apt-get install -y wget \
    locales \
    ca-certificates \
    git \
    python3 \
    python3-pip \
    weasyprint \
    && apt-get install --no-install-recommends -y

# Configure the locale
RUN echo ${LC_ALL} >>/etc/default/locale \
    && echo ${LANG}  >>/etc/default/locale \
    && locale-gen $LANG && update-locale

RUN if [ "24.04" -ge "${UBUNTU_VERSION}" ]; then apt-get install -y mkdocs \
    mkdocs-material \
    mkdocs-material-extensions \
    mkdocs-redirects \
    mkdocs-autorefs \
    mkdocs-literate-nav \
    mkdocstrings \
    mkdocs-click; fi
#       mkdocs-pymdown-extensions \
#       mkdocs-pdf-export-plugin \
#       mkdocs-minify-plugin \
#       mkdocs-git-revision-date-plugin

# Remove default user and group if exists (Ubuntu 24.04 Default User)
RUN if [ -n "$(getent passwd 1000)" ]; then userdel -r $(id -nu 1000); fi

# Create user and group
# RUN addgroup --gid ${GROUP_ID} ${USER_NAME} if exists rename group
RUN  if [ -z "$(getent group ${GROUP_ID})" ]; then addgroup --gid ${GROUP_ID} ${USER_NAME}; fi
# RUN adduser ${GROUP_ID} ${USER_NAME} if exists rename user and change home directory 
RUN  if [ -z "$(getent passwd ${USER_ID})" ]; then adduser --disabled-password --gecos '' --uid ${USER_ID} --gid ${GROUP_ID} ${USER_NAME}; fi

# Set permissions
RUN chown -R ${USER_ID}:${GROUP_ID} /site
RUN chown -R ${USER_ID}:${GROUP_ID} /scripts
RUN chown -R ${USER_ID}:${GROUP_ID} /home/${USER_NAME}
RUN chmod 755 /scripts/entrypoint.sh

# Switch to the user
USER ${USER}

# Install mkdocs and extensions
RUN if [ "22.04" -ge "${UBUNTU_VERSION}" ]; then pip3 install mkdocs \
    && pip3 install markdown_extensions \
    && pip3 install pymdown-extensions \
    && pip3 install mkdocs-material \
    && pip3 install mkdocs-pdf-export-plugin \
    && pip3 install mkdocs-minify-plugin \
    && pip3 install mkdocs-git-revision-date-plugin \
    && pip3 install mkdocs-redirects \
    && pip3 install mkdocs-autorefs \
    && pip3 install mkdocs-literate-nav \
    && pip3 install 'mkdocstrings[crystal,python]' \
    && pip3 install mkdocs-click; fi

# Expose the port
EXPOSE 8000

# Set working directory
WORKDIR /site

# Start the mkdocs server
# ENTRYPOINT [ "/scripts/entrypoint.sh" ]
CMD [ "/bin/bash" ]
